<?php

class AddfundController extends TailieuController {

    private $_model;

    public function filters() {
        return array('accessControl', // perform access control for CRUD operations
        );
    }

    public function accessRules() {
        return TRoles::getAccessRules($this->id);
    }

    public function init() {
        $this->_model = new Addfund;
        parent::init();
    }

    public function actionIndex() {
        Yii::app()->getClientScript()->registerScriptFile(Yii::app()->baseUrl . '/assets/tailieu/js/nganluong.apps.mcflow.js');
        $info = Accounts::infoAccount();
        $this->_model->attributes = $_POST;
        if (Yii::app()->request->isPostRequest && $this->_model->validate()) {
            $captcha = Yii::app()->getController()->createAction("captcha");
            $code = $captcha->verifyCode;
            if (ObjInput::get('verifyCode', 'str', '') <> $code) {
                $this->setErrors('Mã bảo mật không chính xác !');
            } else {

                $txtSoSeri = ObjInput::get('txtSoSeri', 'str', '');
                $txtSoPin = ObjInput::get('txtSoPin', 'str', '');
                $select_method = ObjInput::get('select_method', 'str', '');
                $nganluong = new MobiCard;
                $rs = new Result();
                if (!$info['id']) {
                    $this->redirect(Yii::app()->createUrl('tailieu/login'));
                }
                $ref_code = $info['id'] . '_' . time();
                $rs = $nganluong->CardPay($txtSoPin, $txtSoSeri, $select_method, $ref_code, "", "", "");

                if ($rs->error_code == '00') {
                    $menhgia = $rs->card_amount;

                    if ($GLOBALS['POINT'][$menhgia]) {
                        $point = $GLOBALS['POINT'][$menhgia];

                        $f = Accounts::addPoint($point);
                        if ($f) {
                            Addfund:: addHistory($point, $info, 'Nạp point qua Thẻ cào: ' . 'Mã thẻ: ' . $rs->pin_card . ', serial: ' . $rs->card_amount . ', Mệnh giá: ' . $rs->card_amount . ', Loại thẻ: ' . $rs->type_card, $ref_code, 1);
                            $this->setErrors('Bạn nạp ' . $point . ' point thành công', 'success');
                        } else {
                            Addfund:: addHistory($point, $info, 'Có lỗi: Nạp thẻ thành công, cập nhật point bị lỗi ' . 'Mã thẻ: ' . $rs->pin_card . ', serial: ' . $rs->card_amount . ', Mệnh giá: ' . $rs->card_amount . ', Loại thẻ: ' . $rs->type_card, $ref_code, 2);
                            $this->setErrors('Có lỗi: Nạp thẻ thành công, cập nhật point bị lỗi');
                        }
                    } else {
                        Addfund:: addHistory($point, $info, 'Có lỗi: Nạp thẻ thành công, mệnh giá thẻ chưa được cấu hình ' . 'Mã thẻ: ' . $rs->pin_card . ', serial: ' . $rs->card_amount . ', Mệnh giá: ' . $rs->card_amount . ', Loại thẻ: ' . $rs->type_card, $ref_code, 2);
                        $this->setErrors('Có lỗi: Nạp thẻ thành công, mệnh giá thẻ chưa được cấu hình. Vui lòng liên hệ BQT.');
                    }
                } else {
                    $this->setErrors($rs->error_message);
                }
            }
        } else {
            $this->setErrors($this->_model->getErrorForm());
        }

        $this->render('index', array(
            'errors' => Yii::app()->user->getFlash('error'),
            'success' => Yii::app()->user->getFlash('success'),
            'link_checkout' => $this->_buildLinkCheckoutNL($info),
        ));
    }

    public function actionConfirm() {
        if (ObjInput::get('token_code', 'str', '') == '') {
            $this->redirect(SystemBase::buildUrl('addfund/', array()));
        }
        $info = Accounts::infoAccount();
        $obj = new NL_MicroCheckout(MERCHANT_ID, MERCHANT_PASSWORD, 'https://www.nganluong.vn/micro_checkout_api.php?wsdl');
        if ($obj->checkReturnUrlAuto()) {
            $inputs = array(
                'token' => $obj->getTokenCode(), //$token_code,
            );
            $result = $obj->getExpressCheckout($inputs);
            if ($result != false) {
                if ($result['result_code'] != '00') {
                    $this->setErrors('Mã lỗi ' . $result['result_code'] . ' (' . $result['result_description'] . ') ');
                } else {
                    $data = false;
                    $data = Addfund::getHistoryByToken(ObjInput::get('token_code', 'str', ''));
                    if (!$data) {
                        if ($result["card_amount"] <> '') {
                            $point = $result["card_amount"] * CHANGE_POINT;
                        } else {
                            $point = $result["amount"] * CHANGE_POINT;
                        }
                        $desc = '';
                        foreach ($result as $k => $s) {
                            if ($s <> '') {
                                $desc .= $s . ' | ';
                            }
                        }
                        $f = Accounts::addPoint($point);
                        if ($f) {
                            Addfund:: addHistory($point, $info, $desc, ObjInput::get('token_code', 'str', ''), 1);
                            $this->setErrors('Bạn nạp ' . $point . ' point thành công', 'success');
                        } else {
                            Addfund:: addHistory($point, $info, 'Có lỗi: Nạp tiền thành công, cập nhật point bị lỗi' . $desc, ObjInput::get('token_code', 'str', ''), 2);
                            $this->setErrors('Có lỗi: Nạp tiền thành công, cập nhật point bị lỗi');
                        }
                    } else {
                        if ($data['status'] == '1') {
                            $f = Accounts::addPoint($data['point']);
                            Addfund::updateHistory(array('status' => 1), 'id = ' . $point['id']);
                        } else {
                            $this->setErrors('Có lỗi: giao dịch đã tồn tại trong hệ thống');
                        }
                    }
                }
            } else {
                $this->setErrors('Lỗi kết nối tới cổng thanh toán Ngân Lượng');
            }
        } else {
            $this->setErrors('Tham số truyền không đúng');
        }
        $this->render('confirm', array(
            'errors' => Yii::app()->user->getFlash('error'),
            'success' => Yii::app()->user->getFlash('success'),
            'link_addfund' => SystemBase::buildUrl('tailieu/addfund/', array()),
        ));
    }

    private function _buildLinkCheckoutNL($info) {
        $inputs = array(
            'receiver' => EMAIL_NGANLUONG,
            'order_code' => 'NAPTIEN_' . $info['id'],
            'return_url' => SystemBase::buildUrl('tailieu/addfund/confirm', array()),
            'cancel_url' => SystemBase::buildUrl('tailieu/', array()),
            'language' => 'vn'
        );
        $link_checkout = '';
        $obj = new NL_MicroCheckout(MERCHANT_ID, MERCHANT_PASSWORD, 'https://www.nganluong.vn/micro_checkout_api.php?wsdl');
        $result = $obj->setExpressCheckoutDeposit($inputs);
        if ($result != false) {
            if ($result['result_code'] == '00') {
                $link_checkout = $result['link_checkout'];
                $link_checkout = str_replace('micro_checkout.php?token=', 'index.php?portal=checkout&page=micro_checkout&token_code=', $link_checkout);
            } else {

                $this->setErrors('Ma loi ' . $result['result_code'] . ' (' . $result['result_description'] . ') ');
                return false;
            }
        } else {
            $this->setErrors('Lỗi kết nối với NgânLượng.vn');
            return false;
        }
        return $link_checkout;
    }

}
